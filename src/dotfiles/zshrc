# Lines configured by zsh-newuser-install
HISTFILE=${HOME}/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt autocd nomatch
unsetopt beep
bindkey -v
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename ${HOME}/.zshrc
 
autoload -Uz compinit
compinit
# End of lines added by compinstall
###############################################################################

###############################################################################
# STANDARDS ZSH SETUP

# Path to oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
ZSH_THEME="pollen"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion.
CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable command autocorrection.
DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for
# completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in
# ~/.oh-my-zsh/plugins/*). Custom plugins may be added to
# ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(gitfast cp)

source $ZSH/oh-my-zsh.sh

# END OF STANDARD ZSH SETUP
###############################################################################

# Always source .profile. Ubuntu automatically sources it for graphical
# login sessions, but it doesn't seem to do it for SSH sessions.
if [ -f "${HOME}/.profile" ]; then
  source "${HOME}/.profile"
fi

# Disable the zsh feature that puts the name of the command into the terminal
# title bar while the command is running.
add-zsh-hook -d preexec omz_termsupport_preexec
