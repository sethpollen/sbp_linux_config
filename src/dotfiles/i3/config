# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
# Should you change your keyboard layout somewhen, delete
# this file and re-run i3-config-wizard(1).

# i3 config file (v4)
# Please see http://i3wm.org/docs/userguide.html for a complete reference!


##############################################################################
# NOTES
# The following keystrokes are bound in tmux and should not be used here:
#  Alt+,
#  Alt+.
#  Alt+/
#  Alt+<
#  Alt+>
#  Alt+?
#  Alt+T
#  Alt+\
#  Alt+|


##############################################################################
# GLOBAL SETTINGS

# Alt
set $mod Mod1

# Log everything that is exec'd from this file.
set $exec exec exec-logged
set $exec-no-startup-id exec --no-startup-id exec-logged

# Font for window titles. ISO 10646 = Unicode
font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1

# Use Alt+Left-Drag to move floating windows.
# Use Alt+Right-Drag to resize floating windows.
floating_modifier $mod

# Make sure floating windows fit comfortably in the center of the screen.
floating_maximum_size 1000 x 700

# Allow popup windows to interrupt fullscreen sessions.
popup_during_fullscreen leave_fullscreen

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  status_command exec-logged i3status-wrapper
  position bottom

  # Put the system tray on the laptop flat-panel.
  # TODO: This isn't working right on my laptop. It may be that the primary
  # Xrandr display changes after the i3 config runs. In any case, reloading
  # i3 fixes the problem.
  tray_output primary

  workspace_buttons yes
  binding_mode_indicator yes

  colors {
    background #000000
    statusline #ffffff
    separator  #666666

    # class            border  backgr. text
    focused_workspace  #4c78FF #2855CC #ffffff
    active_workspace   #BBBBBB #5f676a #ffffff
    inactive_workspace #333333 #222222 #888888
    urgent_workspace   #FF8855 #DD5500 #ffffff
  }
}

# Set border widths, and disable title bars for Chrome.
set $border 3
for_window [title=" -( Google)? Chrom(e)?(ium)?$"] border pixel $border
new_window normal $border

# Some of my scripts explicitly set the title "floating_enable" to force their
# windows to float.
for_window [title="floating_enable"] floating enable

# Edge borders are frustrating for applications that put tabs across the top
# (like Chrome). By hiding them, we do miss out on the cues which i3 gives
# for the position of the next window to be opened, but it's a necessary
# loss.
hide_edge_borders both

# Restart i3 inplace (preserves your layout/session, can be used to
# upgrade i3).
bindsym $mod+Shift+X restart

# Exit i3 (logs you out of your X session).
bindsym $mod+Shift+E exit

# Colors.
# class                 border  backgr. text    indicator
client.focused          #4c78FF #2855CC #ffffff #2e9ef4
client.focused_inactive #333333 #5f676a #ffffff #484e50
client.unfocused        #333333 #222222 #888888 #292d2e
client.urgent           #FF8855 #DD5500 #ffffff #DD5500


##############################################################################
# SWITCHING FOCUS AND MOVING THINGS
# This includes moving containers and workspaces around, among other
# containers, workspaces, and even outputs (monitors).

# Change focus.
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move focused window.
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Alt+Tab to iterate over workspaces within a single monitor.
bindsym $mod+Tab workspace next_on_output
bindsym $mod+Shift+Tab workspace prev_on_output

# Alt+jkl; to move workspaces between monitors.
bindsym $mod+j move workspace to output left
bindsym $mod+k move workspace to output down
bindsym $mod+l move workspace to output up
bindsym $mod+semicolon move workspace to output right

# Alt+Shift+JKL: to move containers between monitors.
bindsym $mod+Shift+J move container to output left
bindsym $mod+Shift+K move container to output down
bindsym $mod+Shift+L move container to output up
bindsym $mod+Shift+colon move container to output right

# Alt+PageUp and Alt+PageDown to move the current workspace to the left or
# right in the list of workspaces.
bindsym $mod+Prior $exec python -c "__import__('i3sbp').swapLeft()"
bindsym $mod+Next $exec python -c "__import__('i3sbp').swapRight()"

# Switch to workspace.
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace.
bindsym $mod+Shift+exclam move container to workspace number 1; workspace number 1
bindsym $mod+Shift+at move container to workspace number 2; workspace number 2
bindsym $mod+Shift+numbersign move container to workspace number 3; workspace number 3
bindsym $mod+Shift+dollar move container to workspace number 4; workspace number 4
bindsym $mod+Shift+percent move container to workspace number 5; workspace number 5
bindsym $mod+Shift+asciicircum move container to workspace number 6; workspace number 6
bindsym $mod+Shift+ampersand move container to workspace number 7; workspace number 7
bindsym $mod+Shift+asterisk move container to workspace number 8; workspace number 8
bindsym $mod+Shift+parenleft move container to workspace number 9; workspace number 9
bindsym $mod+Shift+parenright move container to workspace number 10; workspace number 10


##############################################################################
# WINDOW MANAGEMENT

# Kill focused window.
bindsym $mod+q kill

# Having focus follow the mouse is annoying on desktops (where the mouse
# clutters the desk), and it's hard to have it enabled on some of my
# machines and disabled on others. But I keep it on for every machine,
# because it's SO convenient. It helps to use a trackball mouse.
focus_follows_mouse on

# Scratchpad. As in other places, $mod+* switches the view, whil $mod+Shift+*
# relocates the current window.
bindsym $mod+Shift+p move scratchpad
bindsym $mod+p scratchpad show


##############################################################################
# LAYOUT MANAGEMENT

# Add horizontal or vertical splits to the current window.
bindsym $mod+h split horizontal
bindsym $mod+v split vertical

# Enter fullscreen mode for the focused container.
bindsym $mod+f fullscreen

# Change container layout (stacked, tabbed, default).
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Change focus (and move) between tiling / floating windows.
bindsym $mod+o focus mode_toggle
bindsym $mod+Shift+O floating toggle

# Focus the parent container.
bindsym $mod+a focus parent

# Focus the child container.
bindsym $mod+d focus child


##############################################################################
# WORKSPACE MANAGEMENT

# Focusing the current workspace will switch back and forth between it and
# the most recent unfocused workspace.
workspace_auto_back_and_forth yes

# Alt+backtick for a menu of all workspaces (with the option to create new
# ones).
bindsym $mod+grave $exec python -c "__import__('i3sbp').switchChoose()"
bindsym $mod+Shift+asciitilde $exec python -c "__import__('i3sbp').moveChoose()"

# Focus/move to a new numerically-named workspace. Recall that CapsLock is
# another Escape key.
bindsym $mod+Escape $exec python -c "__import__('i3sbp').switchNew()"
bindsym $mod+Shift+Escape $exec python -c "__import__('i3sbp').moveNew()"

# Rename workspaces.
bindsym $mod+n $exec python -c "__import__('i3sbp').rename()"


##############################################################################
# RESIZE MODE

set $resizeAmount 10 px or 5 ppt

# Resize window (you can also use the mouse for that).
mode "resize" {
  # Keep the same bindings as before for focusing and moving windows
  # and workspaces. For these bindings, we allow them with or without the
  # Alt key.

  # Change focused window.
  bindsym Left focus left
  bindsym Down focus down
  bindsym Up focus up
  bindsym Right focus right

  bindsym $mod+Left focus left
  bindsym $mod+Down focus down
  bindsym $mod+Up focus up
  bindsym $mod+Right focus right

  # Move focused window.
  bindsym Shift+Left move left
  bindsym Shift+Down move down
  bindsym Shift+Up move up
  bindsym Shift+Right move right

  bindsym $mod+Shift+Left move left
  bindsym $mod+Shift+Down move down
  bindsym $mod+Shift+Up move up
  bindsym $mod+Shift+Right move right

  # Switch focus among the different monitors.
  bindsym j focus output left
  bindsym k focus output down
  bindsym l focus output up
  bindsym semicolon focus output right

  bindsym $mod+j focus output left
  bindsym $mod+k focus output down
  bindsym $mod+l focus output up
  bindsym $mod+semicolon focus output right

  # Move workspaces between monitors.
  bindsym Shift+J move workspace to output left
  bindsym Shift+K move workspace to output down
  bindsym Shift+L move workspace to output up
  bindsym Shift+colon move workspace to output right

  bindsym $mod+Shift+J move workspace to output left
  bindsym $mod+Shift+K move workspace to output down
  bindsym $mod+Shift+L move workspace to output up
  bindsym $mod+Shift+colon move workspace to output right

  # Use WASD to make the window bigger. Use Shift+WASD or Alt+WASD
  # to make the window smaller. For convenience, the Shift and Alt
  # modifiers cancel, so Alt+Shift+WASD is the same as WASD.

  bindsym w resize grow up $resizeAmount
  bindsym a resize grow left $resizeAmount
  bindsym s resize grow down $resizeAmount
  bindsym d resize grow right $resizeAmount

  bindsym Shift+W resize shrink up $resizeAmount
  bindsym Shift+A resize shrink left $resizeAmount
  bindsym Shift+S resize shrink down $resizeAmount
  bindsym Shift+D resize shrink right $resizeAmount

  bindsym $mod+w resize shrink up $resizeAmount
  bindsym $mod+a resize shrink left $resizeAmount
  bindsym $mod+s resize shrink down $resizeAmount
  bindsym $mod+d resize shrink right $resizeAmount

  bindsym $mod+Shift+W resize grow up $resizeAmount
  bindsym $mod+Shift+A resize grow left $resizeAmount
  bindsym $mod+Shift+S resize grow down $resizeAmount
  bindsym $mod+Shift+D resize grow right $resizeAmount

  # back to normal: Enter or Escape (with optional Alt)
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym $mod+Return mode "default"
  bindsym $mod+Escape mode "default"
}

bindsym $mod+r mode "resize"


##############################################################################
# PROGRAM SHORTCUTS

# Start a terminal.
bindsym $mod+Return $exec i3-sensible-terminal

# Start dmenu (a program launcher).
bindsym $mod+space $exec dmenu_run

# Start kate (text editor).
bindsym $mod+BackSpace $exec kate

# Some quick-launch keys for specific websites.
bindsym $mod+c $exec google-chrome
bindsym $mod+Shift+C $exec google-chrome --incognito
bindsym $mod+g $exec gmail

# Screen locking. For a Lenovo laptop (which lacks an easy Scroll Lock key),
# use that weird, unmarked key.
bindsym Scroll_Lock $exec i3lock
bindsym XF86Launch1 $exec i3lock

# Shutdown/restart dialog.
bindsym $mod+Delete $exec i3shutdown
bindsym $mod+Shift+Delete $exec i3suspend

# Print screen.
bindsym Print $exec ksnapshot --current
bindsym Shift+Print $exec ksnapshot

# Shortcut to volume. Invoking kmix when it is already in the systray will
# cause a window to appear. Make sure this window is floating.
bindsym $mod+plus $exec kmix
for_window [class="Kmix"] floating enable

# Shortcuts to quickly switch X outputs.
bindsym $mod+F1 $exec one-monitor
bindsym $mod+F2 $exec two-monitors


##############################################################################
# AUTORUNS

# Systray applet for sound volume.
$exec-no-startup-id kmix

# Spawn a gnome-settings-daemon to handle laptop brightness, volume, lid
# closing, and other special keys. Note that you can configure this daemon
# with gnome-control-center.
$exec-no-startup-id gnome-settings-daemon

# Spawn a gnome-session to handle DBUS events (like power-off).
$exec-no-startup-id gnome-session

# Desktop background. This process runs continuously in the background.
$exec-no-startup-id fehbg

# Log sweeper. Just in case any of the things we exec-logged here are too
# spammy. We don't want them to fill up the disk.
$exec-no-startup-id sweep-logs

# Standard autoruns.
$exec-no-startup-id exec-autorun
$exec-no-startup-id fix-xkeymap
