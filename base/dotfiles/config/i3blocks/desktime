#!/bin/sh
#
# Blocklet which displays the number of minutes or "desk time" I have left,
# i.e. the number of minutes until my next meeting.
#
# TODO: reimplement in fish

if ! which desktime >/dev/null; then
  # Disable this blocklet on machines with no Calendar access.
  exit
fi

# Fetch fresh calendar information every 2 minutes.
FETCH_INTERVAL=60

DIR="${HOME}/.i3cal"
LAST_FILE="${DIR}/desktime.last"
LAST_TIMESTAMP_FILE="${DIR}/desktime.last.timestamp"

now="$(date +%s)"
last_timestamp="$(cat "$LAST_TIMESTAMP_FILE")"
elapsed="$((now - last_timestamp))"

if (( elapsed >= FETCH_INTERVAL )); then
  # Fetch new results from Calendar.
  if ! desktime > "$LAST_FILE"; then
    echo "<span color='#FFFF00'> ðŸ“… ERR </span>"
    exit
  fi
  echo "$now" > "$LAST_TIMESTAMP_FILE"
fi

# The first line is the unix timstamp of the event.
unix_seconds="$(cat "$LAST_FILE" | head -n 1)"
if [ -z "$unix_seconds" ]; then
  # No upcoming events, so don't print anything.
  exit
fi

# Pretty-print the remaining seconds, using exactly 3 characters.
now="$(date +%s)"
seconds=$(( unix_seconds - now ))

if (( seconds < 60 )); then
  time="now"
else
  minutes="$(( seconds / 60 ))"
  if (( minutes <= 9 )); then
    time=" ${minutes}m"
  elif (( minutes <= 99 )); then
    time="${minutes}m"
  else
    # Round to the nearest hour.
    hours="$(( (minutes + 30) / 60 ))"
    if (( hours <= 9 )); then
      time=" ${hours}h"
    elif (( hours <= 99 )); then
      time="${hours}h"
    else
      # It's more than 99 hours in the future? Thats, like, forever! Don't print
      # anything
      exit
    fi
  fi
fi

# The second line is the name of the event.
title="$(cat "$LAST_FILE" | head -n 2 | tail -n 1)"

# The third line is the name of the room.
room="$(cat "$LAST_FILE" | head -n 3 | tail -n 1)"

# Start building up the output string. Foreground color is always yellow.
# Background is usually black, but turns bright red when it's time to go.
text="<span color='#FFFF00'"
if (( seconds <= 60 )); then
  text="$text bgcolor='#FF0000'"
fi
text="$text>"

# Title first.
if [ -n "$title" ]; then
  text="$text $title"
fi

# Then location.
if [ -n "$room" ]; then
  text="$text @ $room"
else
  # No room! That's terrible! Flag it with a bright color.
  text="$text @ <span bgcolor='#0000FF'>???</span>"
fi

text="$text ðŸ“… $time </span>"
echo "$text"
