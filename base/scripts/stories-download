#!/usr/bin/env python3

import os
import subprocess
import sys
import xml.etree.ElementTree as ET

# First download the RSS file, whose URL is given as argv[1]
assert(len(sys.argv[1]) > 0)
result = subprocess.run(['wget', '-O', '-', sys.argv[1]], capture_output=True)
assert(result.returncode == 0)

# Parse the RSS XML.
rss = ET.fromstring(result.stdout)
assert(rss.tag == 'rss')
channel = rss[0]
assert(channel.tag == 'channel')

# Skip over some episodes.
skip_titles = [
  'The Telltale Wrapper',
  'If I Could Change My Skin',
  'Getting My Wings',
  'Keep It Chill, Daffodil!',
  'Pilot Test: Extra Scoops',
  'Daniel in the Lions\' Den',
  'David and Goliath',
  'Noah\'s Ark',
]

# Make sure we use every entry in the skip list.
skips = 0

# Iterate over all episodes in the RSS file, collecting their titles and urls.
episodes = []
for item in channel:
  if item.tag != 'item':
    # Skip metadata entries.
    continue

  for i in item:
    if i.tag == 'title':
      title = i.text.strip()
    elif i.tag == 'enclosure':
      url = i.attrib['url']

  # Apply the skip list.
  if title in skip_titles:
    skips += 1
    continue

  episodes.append([title, url])

# Check that we found all the episodes we wished to skip.
assert(skips == len(skip_titles))

# The RSS file is sorted from newest to oldest. We re-sort from oldest to
# newest.
episodes.reverse()

# Download audio of each episode.
for i in range(len(episodes)):
  title = episodes[i][0]
  url = episodes[i][1]

  if os.path.isfile(title):
    print('Skipping title already downloaded: ' + title)
    continue

  print('Fetching: ' + title)
  result = subprocess.run(['wget', '-O', '%03d %s.mp3' % (i, title), url])
  assert(result.returncode == 0)

