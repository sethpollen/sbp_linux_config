#!/usr/bin/env fish
#
# A lightweight wrapper around 'sbp_main back' (which is implemented in Go).
# The shell wrapper allows us to call out to 'less' to display output, and it
# reduces the subcommand set somewhat.

set subcmds ls ls_nostar fork peek join kill

if test (count $argv) -lt 1
  echo "No subcommand. Try one of these:"
  echo "  $subcmds"
  exit 1
end
set subcmd $argv[1]
set argv $argv[2..-1]

# +G tells less to scroll to the end of the output right away. We also tell
# less to show fully ANSI colors.
function display
  less +G --RAW-CONTROL-CHARS
end

if not contains "$subcmd" $subcmds
  echo "Unrecognized subcommand:" $subcmd
  exit 1
end

if contains $subcmd ls ls_nostar
  # Pass through the command verbatim.
  sbp_main back $subcmd $argv
  exit
end

if test $subcmd = "fork"
  # 'fork' is just an alias for 'start'.
  sbp_main back start $argv
  exit
end

if test $subcmd = "peek"
  sbp_main back peek $argv | display
  exit
end

if test $subcmd = "join"
  # If the job is done, display its output and then clean it up.
  sbp_main back poll $argv
  and sbp_main back peek $argv | display
  and sbp_main back reclaim $argv
  exit
end

if test $subcmd = "kill"
  # Terminate the job, display its output, and clean it up.
  sbp_main back kill $argv
  and sbp_main back peek $argv | display
  and sbp_main back reclaim $argv
  exit
end
